@startuml
participant Logic 
participant "x:AddExpenseToEventCommand" as Command
participant ":ExpenseManager" as ExpenseManager
participant ":EventManager" as EventManager
participant "newOwningEvent:Event" as noe
participant "originalOwningEvent:Event" as ooe
participant "expense:Expense" as Expense
participant "UI" as UI


Logic -> Command: execute(dashboard : Dashboard)
activate Command

Command -> ExpenseManager: isExpenseIndexValid(expenseIdx : int)
activate ExpenseManager
ExpenseManager --> Command: isValidExpenseIndex : bool
deactivate ExpenseManager

Command -> EventManager: isEventIndexValid(eventIdx : int)
activate EventManager
EventManager --> Command: isValidEventIndex : bool
deactivate EventManager

opt !isValidExpenseIndex || !isValidEventIndex
    Command -> UI: prettyPrint("Indexes provided are invalid")
    activate UI
    UI --> Command:
    deactivate UI
    Command --> Logic: 
    deactivate Command
end

Command -> ExpenseManager: getExpense(expenseIdx : int)
activate ExpenseManager
ExpenseManager --> Command: expense
deactivate ExpenseManager

Command -> EventManager: getEvent(eventIdx : int)
activate EventManager
EventManager --> Command: newOwningEvent
deactivate EventManager

Command -> noe : containsExpense(expense)
activate noe
noe --> Command: isExpenseOwnedByEvent : bool
deactivate noe

opt isExpenseOwnedByEvent
    Command -> UI: prettyPrint("Expense already belongs to the event")
    activate UI
    UI --> Command:
    deactivate UI
    Command --> Logic:
    deactivate Command
end

Command -> expense: getOwningEvent()
activate expense
expense --> Command: originalOwningEvent
deactivate expense

opt originalOwningEvent != null
    Command -> UI: prettyPrint("Expense belonged to another event. Moving it to the new event.")
    activate UI
    UI --> Command:
    deactivate UI
    Command -> ooe: removeExpense(expense)
    activate ooe
    ooe --> Command:
    deactivate ooe
    Command -> expense: removeOwningEvent()
    activate expense
    expense --> Command:
    deactivate expense
end

Command -> noe: addExpense(expense)
activate noe
noe --> Command:
deactivate noe

Command -> expense: setOwningEvent(newOwningEvent)
activate expense
expense --> Command:
deactivate expense

Command -> UI: prettyPrint("Expense added to event successfully")
activate UI
UI --> Command:
deactivate UI

Command --> Logic:
deactivate Command

@enduml